services:
  install_plugins:
    # This intermediate service is used to install the plugins
    # before starting the GatewayD service.
    image: alpine:3.20
    command: ["/bin/sh", "/setup.sh"]
    volumes:
      - ./setup.sh:/setup.sh:ro
      # Use the variable defined above to mount the GatewayD files.
      - ./gatewayd-files:/gatewayd-files:rw
    environment:
      - GATEWAYD_FILES=/gatewayd-files
      # If you want to install a specific version of GatewayD, you can set the
      # GATEWAYD_VERSION environment variable to the desired version. Otherwise,
      # the latest version will be installed.
      # - GATEWAYD_VERSION=v0.9.5
      # The architecture of the GatewayD and plugins to install.
      # Default: amd64
      # Possible values: amd64 or arm64
      # - ARCH=amd64
      - REDIS_URL=redis://redis:6379/0
  write-postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  read-postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  gatewayd-1:
    image: gatewaydio/gatewayd:latest
    pull_policy: always
    command:
      [
        "run",
        "--config",
        "/gatewayd-files/gatewayd.yaml",
        "--plugin-config",
        "/gatewayd-files/gatewayd_plugins.yaml",
        "--tracing",
        "--collector-url",
        "tempo:4317",
      ]
    environment:
      - GATEWAYD_CLIENTS_DEFAULT_WRITES_ADDRESS=write-postgres:5432
      - GATEWAYD_CLIENTS_DEFAULT_READS_ADDRESS=read-postgres:5432
      - GATEWAYD_RAFT_NODEID=node1
      - GATEWAYD_RAFT_ISBOOTSTRAP=true
      - GATEWAYD_RAFT_ADDRESS=gatewayd-1:2223
      - GATEWAYD_RAFT_GRPCADDRESS=gatewayd-1:50051
      - GATEWAYD_RAFT_PEERS=[{"id":"node2","address":"gatewayd-2:2223","grpcAddress":"gatewayd-2:50051"},{"id":"node3","address":"gatewayd-3:2223","grpcAddress":"gatewayd-3:50051"}]
    ports:
      - "15432:15432"
      - "18080:18080"
      - "19090:19090"
      - "42223:2223"
      - "50051:50051"
    volumes:
      - ./gatewayd-files:/gatewayd-files:ro
      - ./raft-data-1:/var/lib/gatewayd/raft
    links:
      - write-postgres
      - read-postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://gatewayd-1:18080/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      write-postgres:
        condition: service_healthy
      read-postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      install_plugins:
        condition: service_completed_successfully

  gatewayd-2:
    image: gatewaydio/gatewayd:latest
    pull_policy: always
    command:
      [
        "run",
        "--config",
        "/gatewayd-files/gatewayd.yaml",
        "--plugin-config",
        "/gatewayd-files/gatewayd_plugins.yaml",
        "--tracing",
        "--collector-url",
        "tempo:4317",
      ]
    environment:
      - GATEWAYD_CLIENTS_DEFAULT_WRITES_ADDRESS=write-postgres:5432
      - GATEWAYD_CLIENTS_DEFAULT_READS_ADDRESS=read-postgres:5432
      - GATEWAYD_RAFT_NODEID=node2
      - GATEWAYD_RAFT_ISBOOTSTRAP=true
      - GATEWAYD_RAFT_ADDRESS=gatewayd-2:2223
      - GATEWAYD_RAFT_GRPCADDRESS=gatewayd-2:50051
      - GATEWAYD_RAFT_PEERS=[{"id":"node1","address":"gatewayd-1:2223","grpcAddress":"gatewayd-1:50051"},{"id":"node3","address":"gatewayd-3:2223","grpcAddress":"gatewayd-3:50051"}]
    ports:
      - "15433:15432"
      - "18081:18080"
      - "19091:19090"
      - "42224:2223"
      - "50052:50051"
    volumes:
      - ./gatewayd-files:/gatewayd-files:ro
      - ./raft-data-2:/var/lib/gatewayd/raft

  gatewayd-3:
    image: gatewaydio/gatewayd:latest
    pull_policy: always
    command:
      [
        "run",
        "--config",
        "/gatewayd-files/gatewayd.yaml",
        "--plugin-config",
        "/gatewayd-files/gatewayd_plugins.yaml",
        "--tracing",
        "--collector-url",
        "tempo:4317",
      ]
    environment:
      - GATEWAYD_CLIENTS_DEFAULT_WRITES_ADDRESS=write-postgres:5432
      - GATEWAYD_CLIENTS_DEFAULT_READS_ADDRESS=read-postgres:5432
      - GATEWAYD_RAFT_NODEID=node3
      - GATEWAYD_RAFT_ISBOOTSTRAP=false
      - GATEWAYD_RAFT_ADDRESS=gatewayd-3:2223
      - GATEWAYD_RAFT_GRPCADDRESS=gatewayd-3:50051
      - GATEWAYD_RAFT_PEERS=[{"id":"node1","address":"gatewayd-1:2223","grpcAddress":"gatewayd-1:50051"},{"id":"node2","address":"gatewayd-2:2223","grpcAddress":"gatewayd-2:50051"}]
    ports:
      - "15434:15432"
      - "18082:18080"
      - "19092:19090"
      - "42225:2223"
      - "50053:50051"
    volumes:
      - ./gatewayd-files:/gatewayd-files:ro
      - ./raft-data-3:/var/lib/gatewayd/raft

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./observability-configs/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - gatewayd-1
      - gatewayd-2
      - gatewayd-3

  tempo_init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./observability-configs/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "4317:4317" # otlp grpc
    depends_on:
      - tempo_init

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./observability-configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
